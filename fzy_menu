#!/bin/sh
# FZY: Command Line Fuzzy Finder
# Author: Nan0Scho1ar (Christopher Mackinga)
# Created: 29/10/2020
# License: MIT License

input="$(< /dev/stdin)"; height="$(tput lines)"; inum=$(echo "$input" | wc -l)
echo -e "\e[?1049h"; row=1; col=1; str=""; cur=1; fnum=$inum; regex=""; regex2=""
while true; do
    range="$row,$((row+height-3))p;$((row+height-3))q"
    filtered=$(echo "$input" | grep ".*$regex" | sed -e $range | sed -e 's/.*/  &/');
    frangenum="$(echo "$filtered" | wc -l)"
    echo "$filtered" | cut -c$col- | grep -E --color=always "$regex2" | tac |
        sed $((frangenum-cur+1))'s/^  \(.*\)/> \1/' 2>/dev/null && echo "  $fnum/$inum"
    read -p "> $str" -n 1 -s < /dev/tty && read -sn3 -t 0.001 k1 < /dev/tty; REPLY+=$k1;
    case "$REPLY" in
        '') echo -e "\e[?1049l$(echo "$filtered" | sed -n "${cur}s/  //p;${cur}q;")" && exit;;
        $'\e[C'|$'\e0C') col=$((col+1));;
        $'\e[D'|$'\e0D') [[ $col -gt 1 ]] && col=$((col-1));;
        $'\e[B'|$'\e0B') [[ $cur -ge 1 ]] && cur=$((cur-1));;
        $'\e[A'|$'\e0A') [[ $cur -le $fnum ]] && cur=$((cur+1));;
        $'\e[1~'|$'\e0H'|$'\e[H') row=1;;
        $'\e[4~'|$'\e0F'|$'\e[F') row=$fnum;;
        *)
            char=$(echo $REPLY | hexdump -c | awk '{ print $2 }');
            if [[ $char = "033" ]]; then echo -e "\e[?1049l$" && break;
            elif [[ $char = "177" ]] && [[ $(echo $str | wc -m) -gt 1 ]]; then
                 str="${str::-1}"
            else str="$str$REPLY" && row=1; fi
            regex=$(echo "$str" | sed "s/\(.\)/\1.*/g");
            regex2=$(echo "$str" | sed "s/\(.\)/\1|/g");
            fnum=$(echo "$input" | grep ".*$regex" | wc -l)
        ;;
    esac
    [[ $((cur+row-height)) -ge 0 ]] && row=$((row+1)) && cur=$((cur-1));
    [[ $((row-height+3)) -eq 0 ]] && row=$((row-1));
    [[ $cur -lt 1 ]] && row=$((row-1)) && cur=$((cur+1))
    [[ $row -lt 1 ]] && row=1
    [[ $cur -gt $fnum ]] && cur=$fnum
    yes '' | sed "${height}q";
done
